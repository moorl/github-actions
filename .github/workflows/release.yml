name: Store Release
on:
  workflow_call:
    inputs:
      extensionName:
        required: true
        type: string
      cliVersion:
        description: 'The shopware-cli version to build the extension with'
        required: false
        type: string
        default: 'latest'
      path:
        description: "Path to your bundle"
        required: false
        type: string
        default: "."
      environment:
        description: "The environment to use"
        required: false
        type: string
        default: ""

    secrets:
      accountUser:
        required: false
      accountPassword:
        required: false
      ghToken:
        required: true

jobs:
  check_version:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.ver.outputs.changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Compare composer.json version
        id: ver
        run: |
          old=$(git show HEAD^:composer.json 2>/dev/null | jq -r '.version // empty')
          new=$(jq -r '.version // empty' composer.json)

          if [ "$old" != "$new" ]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

  BuildAndRelease:
    needs: check_version
    if: ${{ needs.check_version.outputs.version_changed == 'true' }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install shopware-cli
        uses: shopware/shopware-cli-action@v1
        with:
          version: ${{ inputs.cliVersion }}

      - name: Build & create zip
        env:
          NODE_OPTIONS: --openssl-legacy-provider
        run: |
          shopware-cli extension zip --git-commit ${{ github.sha }} "${{ inputs.path }}" --release
          mv ${{ inputs.extensionName }}-${{ github.sha }}.zip ${{ inputs.extensionName }}.zip

      - name: Upload Artefact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.extensionName }}
          path: ${{ inputs.extensionName }}-${{ env.EXTENSION_VERSION }}.zip

      - name: Get version
        run: |
          echo "EXTENSION_VERSION=$(shopware-cli extension get-version .)" >> $GITHUB_ENV

      - name: Check Tag existence
        uses: mukunku/tag-exists-action@v1.6.0
        id: checkTag
        with:
          tag: ${{ env.EXTENSION_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.ghToken }}

      - name: Validate Zip
        run: shopware-cli extension validate $(pwd)/${{ inputs.extensionName }}.zip

      - name: Store Upload
        if: ${{ env.HAS_CREDS == 'true' }}
        run: shopware-cli account producer extension upload $(pwd)/${{ inputs.extensionName }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.ghToken }}
          SHOPWARE_CLI_ACCOUNT_EMAIL: ${{ secrets.accountUser }}
          SHOPWARE_CLI_ACCOUNT_PASSWORD: ${{ secrets.accountPassword }}
          HAS_CREDS: ${{ secrets.accountUser != '' && secrets.accountPassword != '' }}

      - name: Extract Changelog
        if: steps.checkTag.outputs.exists != 'true'
        run: shopware-cli extension get-changelog $(pwd)/${{ inputs.extensionName }}.zip > /tmp/changelog.txt

      - name: Unzip
        run: |
          unzip -o -q "${{ inputs.extensionName }}.zip" -d /tmp/toDeploy
          mv "${{ inputs.extensionName }}.zip" /tmp/
          rsync -av --exclude '.git' --delete /tmp/toDeploy/${{ inputs.extensionName }}/ .
          rm -rf ./vendor

      - name: Commit
        if: steps.checkTag.outputs.exists != 'true'
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git add -f .
          git commit -m "Build release"
          git tag ${EXTENSION_VERSION}
          git push origin ${EXTENSION_VERSION}

      - name: Create a GitHub release
        if: steps.checkTag.outputs.exists != 'true'
        uses: ncipollo/release-action@v1
        with:
          artifacts: /tmp/${{ inputs.extensionName }}.zip
          tag: ${{ env.EXTENSION_VERSION }}
          name: ${{ env.EXTENSION_VERSION }}
          bodyFile: /tmp/changelog.txt
